    <script>
        jQuery(document).ready(function () {
            gsap.registerPlugin(ScrollTrigger);

            const smallCarousel = {
                settings: {
                    $container: jQuery('.circle-container-gjgyjjuytui'),
                    $items: jQuery('.circle-container-gjgyjjuytui .item'),
                    totalItems: jQuery('.circle-container-gjgyjjuytui .item').length,
                },

                init() {
                    this.bindEvents();
                    this.applyScrollTrigger();
                },

                bindEvents() {
                    const { $items } = this.settings;

                    // Click event for circle items
                    $items.each((index, item) => {
                        jQuery(item).find('a').on('click', (e) => {
                            e.preventDefault();
                            this.rotateTo(index);

                            // Update background and text styles
                            const bgColor = jQuery(e.currentTarget).attr('data-bgColor');
                            const color = jQuery(e.currentTarget).attr('data-color');
                            const title = jQuery(e.currentTarget).attr('data-title');

                            jQuery('.container-gjgyjjuytui').css('backgroundColor', bgColor);
                            jQuery('.text').text(title).css('color', color);
                        });
                    });
                },

                rotateTo(index) {
                    const { $items, totalItems } = this.settings;
                    const angle = 360 / totalItems; // Dynamic angle per item
                    const containerRadius = this.settings.$container.width() / 1.15;

                    $items.each((i, item) => {
                        const rotation = angle * (i - index);
                        jQuery(item).css({
                            transform: `rotate(${rotation}deg) translateY(-${containerRadius}px) rotate(${-rotation}deg)`,
                        });
                    });
                },

                applyScrollTrigger() {
                    const { totalItems } = this.settings;
                    const angle = 360 / totalItems; // Calculate rotation angle per item

                    gsap.to(".circle-container-gjgyjjuytui", {
                        rotate: angle * (i - index), // Full circle rotation based on items count
                        ease: "none",
                        scrollTrigger: {
                            trigger: ".circle-container-gjgyjjuytui",
                            start: "top center",
                            end: `+=${totalItems * 100}px`, // Adjust scrolling length based on items
                            scrub: 1,
                            pin: true, // Keeps the carousel fixed during scroll
                            // markers: true, // Uncomment for debugging
                        }
                    });
                },

            };
            // applyScrollTrigger()    
            smallCarousel.init();
        });

    </script>

































jQuery(document).ready(function () {
    gsap.registerPlugin(ScrollTrigger);

    const smallCarousel = {
        settings: {
            $container: jQuery('.circle-container-gjgyjjuytui'),
            $items: jQuery('.circle-container-gjgyjjuytui .item'),
            totalItems: jQuery('.circle-container-gjgyjjuytui .item').length,
        },

        init() {
            this.positionItems(); // Position items in a circular layout
            this.bindEvents();
            this.applyScrollTrigger();
        },

        positionItems() {
            const { $items, totalItems } = this.settings;
            const angle = 360 / totalItems; // Calculate angle per item
            const radius = 150; // Adjust the radius as needed

            $items.each((i, item) => {
                const theta = angle * i * (Math.PI / 180); // Convert angle to radians
                const x = Math.cos(theta) * radius;
                const y = Math.sin(theta) * radius;

                jQuery(item).css({
                    transform: `translate(${x}px, ${y}px)`,
                });
            });
        },

        bindEvents() {
            const { $items } = this.settings;

            $items.each((index, item) => {
                jQuery(item).find('a').on('click', (e) => {
                    e.preventDefault();
                    this.rotateTo(index);

                    // Update background and text styles
                    const bgColor = jQuery(e.currentTarget).attr('data-bgColor');
                    const title = jQuery(e.currentTarget).attr('data-title');

                    jQuery('.container-gjgyjjuytui').css('backgroundColor', bgColor);
                    jQuery('.text').text(title);
                });
            });
        },

        rotateTo(index) {
            const { $items, totalItems } = this.settings;
            const angle = 360 / totalItems;
            const rotation = -angle * index; // Rotate to bring selected item to the top

            gsap.to(this.settings.$container, {
                rotate: rotation,
                duration: 1,
                ease: "power2.out",
            });
        },

        applyScrollTrigger() {
            const { totalItems } = this.settings;
            const angle = 360 / totalItems;

            gsap.to(".circle-container-gjgyjjuytui", {
                rotate: `+=${angle * totalItems}`, // Full circle rotation
                ease: "none",
                scrollTrigger: {
                    trigger: ".circle-container-gjgyjjuytui",
                    start: "top center",
                    end: `+=${totalItems * 100}px`,
                    scrub: 1,
                    pin: true,
                }
            });
        },
    };

    smallCarousel.init();
});







































































<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Circle Carousel</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/gsap@3/dist/gsap.min.js"></script>
    <script src="https://unpkg.com/gsap@3/dist/ScrollTrigger.min.js"></script>
    <style>
        .circle-container {
            display: flex;
            justify-content: center;
            align-items: center;
            list-style: none;
            padding: 0;
            margin: 0;
            transform-style: preserve-3d;
            perspective: 1000px;
        }

        .item {
            position: absolute;
            width: 200px;
            height: 200px;
            transform-style: preserve-3d;
        }

        .item img {
            width: 88px;
            object-fit: cover;
        }

        .text {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            position: absolute;
            top: -50px;
            text-align: center;
            font-size: 100px;
        }

        .container {
            background-color: bisque;
        }
    </style>
</head>
<body>
    <section>
        <div class="container-gjgyjjuytui">
            <h1 class="text">Text</h1>
            <div class="col">
                <ul class="circle-container-gjgyjjuytui">
                    <li class="item"><a href="#" data-bgColor="#000" data-title="Hoode">
                        <img src="/img.png" alt="hoode"></a></li>
                    <li class="item"><a href="#" data-bgColor="#fff" data-title="T-Shirt" class="active">
                        <img src="/img1.png" alt="shirt"></a></li>
                    <li class="item"><a href="#" data-bgColor="#f00" data-title="aaaaaa">
                        <img src="/img3.png" alt="pant"></a></li>
                    <li class="item"><a href="#" data-bgColor="#323" data-title="bbbbbb">
                        <img src="/img.png" alt="shirt"></a></li>
                </ul>
            </div>
        </div>
    </section>

    <section id="pin-windmill-wrap">
        <div id="pin-windmill">
            <svg id="pin-windmill-svg" width="100" height="100">
                <!-- Your SVG Content Here -->
            </svg>
        </div>
    </section>

    <script>

jQuery(document).ready(function () {
    gsap.registerPlugin(ScrollTrigger);

    const smallCarousel = {
        settings: {
            $container: jQuery('.circle-container-gjgyjjuytui'),
            $items: jQuery('.circle-container-gjgyjjuytui .item'),
            totalItems: jQuery('.circle-container-gjgyjjuytui .item').length,
        },

        init() {
            this.positionItems(); // Position items in a circular layout
            this.bindEvents();
            this.applyScrollTrigger();
        },

        positionItems() {
            const { $items, totalItems } = this.settings;
            const angle = 360 / totalItems; // Calculate angle per item
            const radius = 150; // Adjust the radius as needed

            $items.each((i, item) => {
                const theta = angle * i * (Math.PI / 180); // Convert angle to radians
                const x = Math.cos(theta) * radius;
                const y = Math.sin(theta) * radius;

                jQuery(item).css({
                    transform: `translate(${x}px, ${y}px)`,
                });
            });
        },

        bindEvents() {
            const { $items } = this.settings;

            $items.each((index, item) => {
                jQuery(item).find('a').on('click', (e) => {
                    e.preventDefault();
                    this.rotateTo(index);

                    // Update background and text styles
                    const bgColor = jQuery(e.currentTarget).attr('data-bgColor');
                    const title = jQuery(e.currentTarget).attr('data-title');

                    jQuery('.container-gjgyjjuytui').css('backgroundColor', bgColor);
                    jQuery('.text').text(title);
                });
            });
        },

        rotateTo(index) {
            const { $items, totalItems } = this.settings;
            const angle = 360 / totalItems;
            const rotation = -angle * index; // Rotate to bring selected item to the top

            gsap.to(this.settings.$container, {
                rotate: rotation,
                duration: 1,
                ease: "power2.out",
            });
        },

        applyScrollTrigger() {
            const { totalItems } = this.settings;
            const angle = 360 / totalItems;

            gsap.to(".circle-container-gjgyjjuytui", {
                rotate: `+=${-angle * totalItems}`, // Full circle rotation
                ease: "none",
                scrollTrigger: {
                    trigger: ".circle-container-gjgyjjuytui",
                    start: "top center",
                    end: `+=${totalItems * 100}px`,
                    scrub: 1,
                    pin: true,
                }
            });
        },
    };

    smallCarousel.init();
});

    </script>
</body>
</html>



